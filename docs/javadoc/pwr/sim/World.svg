<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="436px" preserveAspectRatio="none" style="width:306px;height:436px;" version="1.1" viewBox="0 0 306 436" width="306px" zoomAndPan="magnify"><defs><filter height="300%" id="frq13b7j0wydo" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[e0482b18df9ae4a1c0083229bf001a33]
class pwr.sim.World--><a href="World.html" target="_top" title="World.html" xlink:actuate="onRequest" xlink:href="World.html" xlink:show="new" xlink:title="World.html" xlink:type="simple"><rect fill="#FEFECE" filter="url(#frq13b7j0wydo)" height="399.6641" id="pwr.sim.World" style="stroke: #A80036; stroke-width: 1.5;" width="288" x="7" y="7"/><ellipse cx="127.25" cy="25.9688" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M130.2188,31.6094 Q129.6406,31.9063 129,32.0469 Q128.3594,32.2031 127.6563,32.2031 Q125.1563,32.2031 123.8281,30.5625 Q122.5156,28.9063 122.5156,25.7813 Q122.5156,22.6563 123.8281,21 Q125.1563,19.3438 127.6563,19.3438 Q128.3594,19.3438 129,19.5 Q129.6563,19.6563 130.2188,19.9531 L130.2188,22.6719 Q129.5938,22.0938 129,21.8281 Q128.4063,21.5469 127.7813,21.5469 Q126.4375,21.5469 125.75,22.625 Q125.0625,23.6875 125.0625,25.7813 Q125.0625,27.875 125.75,28.9531 Q126.4375,30.0156 127.7813,30.0156 Q128.4063,30.0156 129,29.75 Q129.5938,29.4688 130.2188,28.8906 L130.2188,31.6094 Z "/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="39" x="147.75" y="24.9951">World</text><text fill="#000000" font-family="sans-serif" font-size="10" lengthAdjust="spacingAndGlyphs" textLength="38" x="148.25" y="37.5791">pwr.sim</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8" x2="294" y1="44.9375" y2="44.9375"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15" y="52.9375"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="27" y="59.1479">animalFactory: AnimalFactory</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15" y="65.7422"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="27" y="71.9526">tiles: Tile[]</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15" y="78.5469"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="27" y="84.7573">animals: List&lt;Animal&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15" y="91.3516"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="27" y="97.562">toSpawn: List&lt;Animal&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15" y="104.1563"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="27" y="110.3667">toRemove: List&lt;Animal&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15" y="116.9609"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="52" x="27" y="123.1714">width: int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15" y="129.7656"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="57" x="27" y="135.9761">height: int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8" x2="294" y1="142.5703" y2="142.5703"/><ellipse cx="18" cy="153.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="27" y="156.7808">World(int, int, Tile[])</text><ellipse cx="18" cy="166.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="153" x="27" y="169.5854">loadFromFile(String): World</text><ellipse cx="18" cy="179.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="27" y="182.3901">update(): void</text><ellipse cx="18" cy="191.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="27" y="195.1948">populate(int, AnimalType): void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15" y="201.7891"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="27" y="207.9995">spawnAnimal(AnimalType): void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15" y="214.5938"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="27" y="220.8042">spawnAnimal(AnimalType, Position2D): Animal</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15" y="227.3984"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="27" y="233.6089">spawnAnimal(Animal, Position2D): void</text><ellipse cx="18" cy="243.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="27" y="246.4136">toSpawn(Animal, Position2D): void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15" y="253.0078"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="27" y="259.2183">addToSpawn(): void</text><ellipse cx="18" cy="268.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="27" y="272.0229">toRemove(Animal): void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15" y="278.6172"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="27" y="284.8276">removeToRemove(): void</text><ellipse cx="18" cy="294.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="67" x="27" y="297.6323">draw(): void</text><ellipse cx="18" cy="307.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="27" y="310.437">drawAnimal(Animal): void</text><ellipse cx="18" cy="320.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="27" y="323.2417">getTile(int, int): Tile</text><ellipse cx="18" cy="332.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="27" y="336.0464">getTile(Position2D): Tile</text><ellipse cx="18" cy="345.6406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="237" x="27" y="348.8511">findNearestPlants(Position2D): Position2D</text><ellipse cx="18" cy="358.4453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="27" y="361.6558">getAnimals(): List&lt;Animal&gt;</text><ellipse cx="18" cy="371.25" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="27" y="374.4604">newPosition(int, int): Position2D</text><ellipse cx="18" cy="384.0547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="27" y="387.2651">getWidth(): int</text><ellipse cx="18" cy="396.8594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="27" y="400.0698">getHeight(): int</text></a><text fill="#888888" font-family="sans-serif" font-size="10" lengthAdjust="spacingAndGlyphs" textLength="186" x="58" y="422.9463">UMLDoclet 2.0.9, PlantUML 1.2020.08</text><!--MD5=[1335c97d72b4b526d3339b6b7ff2e439]
@startuml
    set namespaceSeparator none
    hide empty fields
    hide empty methods

    class "<size:14>World\n<size:10>pwr.sim" as pwr.sim.World [[World.html]] {
        -animalFactory: AnimalFactory
        -tiles: Tile[]
        -animals: List<Animal>
        -toSpawn: List<Animal>
        -toRemove: List<Animal>
        -width: int
        -height: int
        +World(int, int, Tile[])
        {static} +loadFromFile(String): World
        +update(): void
        +populate(int, AnimalType): void
        -spawnAnimal(AnimalType): void
        -spawnAnimal(AnimalType, Position2D): Animal
        -spawnAnimal(Animal, Position2D): void
        +toSpawn(Animal, Position2D): void
        -addToSpawn(): void
        +toRemove(Animal): void
        -removeToRemove(): void
        +draw(): void
        +drawAnimal(Animal): void
        +getTile(int, int): Tile
        +getTile(Position2D): Tile
        +findNearestPlants(Position2D): Position2D
        +getAnimals(): List<Animal>
        +newPosition(int, int): Position2D
        +getWidth(): int
        +getHeight(): int
    }

    center footer UMLDoclet 2.0.9, PlantUML 1.2020.08
@enduml

PlantUML version 1.2020.08(Sun Apr 26 16:08:22 CEST 2020)
(APACHE source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 11.0.7+10-post-Ubuntu-3ubuntu1
Operating System: Linux
Default Encoding: UTF-8
Language: en
Country: GB
--></g></svg>